services:
  # The PostgreSQL Database Service
  db:
    image: postgres:17.5
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - TZ=Europe/Berlin
      - PGTZ=Europe/Berlin
    ports:
      - "5432:5432"

  # The Django Web App Service
  webapp:
    build: 
      context: ./webapp
      dockerfile: Dockerfile
    command: uv run python webapp/manage.py runserver 0.0.0.0:8000
    volumes:
      - ./webapp:/app/webapp
    ports:
      - "8000:8000"
    environment:
      - SECRET_KEY=${SECRET_KEY} 
      - POSTGRES_NAME=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_HOST=db
    depends_on:
      - db

  # Production-ready Django Web App Service
  webapp-prod:
    build: 
      context: ./webapp
      dockerfile: Dockerfile
    command: sh -c "uv run python webapp/manage.py collectstatic --noinput && uv run gunicorn webapp.wsgi:application --bind 0.0.0.0:8000 --workers 3"
    volumes:
      - ./webapp:/app/webapp
      - static_volume:/app/webapp/staticfiles
    ports:
      - "8000:8000"
    environment:
      - SECRET_KEY=${SECRET_KEY}
      - DJANGO_SETTINGS_MODULE=webapp.settings_prod
      - POSTGRES_NAME=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_HOST=db
    depends_on:
      - db
    restart: unless-stopped

  # The Scraper Service
  scrapers:
    build:
      context: ./src
      dockerfile: Dockerfile
    env_file: ".env"
    environment:
      - POSTGRES_NAME=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_HOST=db
    depends_on:
      - db
    volumes:
      # Mount source for development (optional)
      - ./src:/home/dockie/src:ro
    # Default command shows help - override to run specific scrapers
    command: ["uv", "run", "python", "-m", "src.scrapers.main", "--help"]

  # Quick test aliases for development
  test-idealo:
    extends: scrapers
    command: ["uv", "run", "python", "-m", "src.scrapers.main", "--scope", "idealo"]
    
  test-ebay:
    extends: scrapers  
    command: ["uv", "run", "python", "-m", "src.scrapers.main", "--scope", "ebay", "--query", "PS5 Pro"]
  
  production:
    extends: scrapers
    command: ["uv", "run", "python", "-m", "src.scrapers.main", "--scope", "full"]

volumes:
  postgres_data:
  static_volume: